{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js"],"sourcesContent":["(function () {\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $c3b10a83b523f372$export$71511d61b312f219(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $c50969dc1df61e8b$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$71511d61b312f219(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $d4f69c5c6c4654b1$export$71511d61b312f219(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n}\n\n\nfunction $227c6742e0ff6f82$export$71511d61b312f219(arr) {\n    return (0, $c50969dc1df61e8b$export$71511d61b312f219)(arr) || (0, $09c9f293d010c0e1$export$71511d61b312f219)(arr) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr) || (0, $38c2d4931cb7a7c4$export$71511d61b312f219)();\n}\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : null;\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        this.board = initialState || this.createEmptyBoard();\n        this.score = 0;\n        this.status = \"idle\";\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"createEmptyBoard\",\n            value: function createEmptyBoard() {\n                var board = [];\n                for(var i = 0; i < 4; i++)board.push([\n                    0,\n                    0,\n                    0,\n                    0\n                ]);\n                return board;\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                var _this = this, _loop = function(i) {\n                    var row = _this.board[i];\n                    var filtered = row.filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    var newRow = [];\n                    var j = 0;\n                    while(j < filtered.length)if (filtered[j] === filtered[j + 1]) {\n                        var merged = filtered[j] * 2;\n                        newRow.push(merged);\n                        scoreThisMove += merged;\n                        j += 2;\n                    } else {\n                        newRow.push(filtered[j]);\n                        j += 1;\n                    }\n                    while(newRow.length < 4)newRow.push(0);\n                    _this.board[i] = newRow;\n                };\n                var oldBoard = this.board.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n                });\n                var scoreThisMove = 0;\n                for(var i = 0; i < this.board.length; i++)_loop(i);\n                var boardChanged = this.board.some(function(row, i) {\n                    return row.some(function(cell, j) {\n                        return cell !== oldBoard[i][j];\n                    });\n                });\n                if (boardChanged) {\n                    this.addRandomTile();\n                    this.score += scoreThisMove;\n                }\n                if (this.board.some(function(row) {\n                    return row.includes(2048);\n                })) this.status = \"win\";\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                var _this = this, _loop = function(i) {\n                    var row = (0, $227c6742e0ff6f82$export$71511d61b312f219)(_this.board[i]).reverse();\n                    var filtered = row.filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    var newRow = [];\n                    var j = 0;\n                    while(j < filtered.length)if (filtered[j] === filtered[j + 1]) {\n                        var merged = filtered[j] * 2;\n                        newRow.push(merged);\n                        scoreThisMove += merged;\n                        j += 2;\n                    } else {\n                        newRow.push(filtered[j]);\n                        j += 1;\n                    }\n                    while(newRow.length < 4)newRow.push(0);\n                    _this.board[i] = newRow.reverse();\n                };\n                var oldBoard = this.board.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n                });\n                var scoreThisMove = 0;\n                for(var i = 0; i < this.board.length; i++)_loop(i);\n                var boardChanged = this.board.some(function(row, i) {\n                    return row.some(function(cell, j) {\n                        return cell !== oldBoard[i][j];\n                    });\n                });\n                if (boardChanged) {\n                    this.addRandomTile();\n                    this.score += scoreThisMove;\n                }\n                if (this.board.some(function(row) {\n                    return row.includes(2048);\n                })) this.status = \"win\";\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                var _this = this, _loop = function(j) {\n                    var column = [];\n                    for(var i = 0; i < 4; i++)column.push(_this.board[i][j]);\n                    var filtered = column.filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    var newColumn = [];\n                    var index = 0;\n                    while(index < filtered.length)if (filtered[index] === filtered[index + 1]) {\n                        var merged = filtered[index] * 2;\n                        newColumn.push(merged);\n                        scoreThisMove += merged;\n                        index += 2;\n                    } else {\n                        newColumn.push(filtered[index]);\n                        index += 1;\n                    }\n                    while(newColumn.length < 4)newColumn.push(0);\n                    for(var i1 = 0; i1 < 4; i1++)_this.board[i1][j] = newColumn[i1];\n                };\n                var oldBoard = this.board.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n                });\n                var scoreThisMove = 0;\n                for(var j = 0; j < 4; j++)_loop(j);\n                var boardChanged = this.board.some(function(row, i) {\n                    return row.some(function(cell, j) {\n                        return cell !== oldBoard[i][j];\n                    });\n                });\n                if (boardChanged) {\n                    this.addRandomTile();\n                    this.score += scoreThisMove;\n                }\n                if (this.board.some(function(row) {\n                    return row.includes(2048);\n                })) this.status = \"win\";\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                var _this = this, _loop = function(j) {\n                    var column = [];\n                    for(var i = 0; i < 4; i++)column.push(_this.board[i][j]);\n                    var filtered = column.filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    var newColumn = [];\n                    var index = filtered.length - 1;\n                    while(index >= 0)if (filtered[index] === filtered[index - 1]) {\n                        var merged = filtered[index] * 2;\n                        newColumn.unshift(merged);\n                        scoreThisMove += merged;\n                        index -= 2;\n                    } else {\n                        newColumn.unshift(filtered[index]);\n                        index -= 1;\n                    }\n                    while(newColumn.length < 4)newColumn.unshift(0);\n                    for(var i1 = 0; i1 < 4; i1++)_this.board[i1][j] = newColumn[i1];\n                };\n                var oldBoard = this.board.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n                });\n                var scoreThisMove = 0;\n                for(var j = 0; j < 4; j++)_loop(j);\n                var boardChanged = this.board.some(function(row, i) {\n                    return row.some(function(cell, j) {\n                        return cell !== oldBoard[i][j];\n                    });\n                });\n                if (boardChanged) {\n                    this.addRandomTile();\n                    this.score += scoreThisMove;\n                }\n                if (this.board.some(function(row) {\n                    return row.includes(2048);\n                })) this.status = \"win\";\n            }\n        },\n        {\n            key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            key: \"getState\",\n            value: function getState() {\n                return this.board;\n            }\n        },\n        {\n            key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            key: \"start\",\n            value: function start() {\n                this.board = this.createEmptyBoard();\n                this.score = 0;\n                this.status = \"playing\";\n                this.addRandomTile();\n                this.addRandomTile();\n            }\n        },\n        {\n            key: \"addRandomTile\",\n            value: function addRandomTile() {\n                var emptyCells = [];\n                for(var row = 0; row < 4; row++){\n                    for(var col = 0; col < 4; col++)if (this.board[row][col] === 0) emptyCells.push({\n                        row: row,\n                        col: col\n                    });\n                }\n                if (emptyCells.length > 0) {\n                    var randomIndex = Math.floor(Math.random() * emptyCells.length);\n                    var _emptyCells_randomIndex = emptyCells[randomIndex], row1 = _emptyCells_randomIndex.row, col1 = _emptyCells_randomIndex.col;\n                    var value = Math.random() < 0.9 ? 2 : 4;\n                    this.board[row1][col1] = value;\n                }\n            }\n        },\n        {\n            key: \"isGameOver\",\n            value: function isGameOver() {\n                for(var i = 0; i < 4; i++)for(var j = 0; j < 4; j++){\n                    if (this.board[i][j] === 0) return false;\n                    if (j < 3 && this.board[i][j] === this.board[i][j + 1]) return false;\n                    if (i < 3 && this.board[i][j] === this.board[i + 1][j]) return false;\n                }\n                return true;\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                this.start();\n            }\n        }\n    ]);\n    return Game;\n}();\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\n\"use strict\";\nvar $197cd56b15c33885$var$game = new (0, (/*@__PURE__*/$parcel$interopDefault($3d28d7f1aac198f5$exports)))();\nvar $197cd56b15c33885$var$fieldElement = document.querySelector(\".game-field tbody\");\nvar $197cd56b15c33885$var$scoreElement = document.querySelector(\".game-score\");\nvar $197cd56b15c33885$var$messageElements = document.querySelectorAll(\".message-container .message\");\nvar $197cd56b15c33885$var$messageLose = document.querySelector(\".message-lose\");\nvar $197cd56b15c33885$var$messageWin = document.querySelector(\".message-win\");\nvar $197cd56b15c33885$var$messageStart = document.querySelector(\".message-start\");\nvar $197cd56b15c33885$var$buttonStart = document.querySelector(\".button.start\");\n$197cd56b15c33885$var$render();\nfunction $197cd56b15c33885$var$render() {\n    $197cd56b15c33885$var$fieldElement.innerHTML = \"\";\n    var state = $197cd56b15c33885$var$game.getState();\n    for(var row = 0; row < state.length; row++){\n        var tr = document.createElement(\"tr\");\n        tr.classList.add(\"field-row\");\n        for(var col = 0; col < state[row].length; col++){\n            var value = state[row][col];\n            var cell = document.createElement(\"td\");\n            cell.classList.add(\"field-cell\");\n            if (value !== 0) {\n                cell.textContent = value;\n                cell.classList.add(\"field-cell--\".concat(value));\n            }\n            tr.appendChild(cell);\n        }\n        $197cd56b15c33885$var$fieldElement.appendChild(tr);\n    }\n    $197cd56b15c33885$var$scoreElement.textContent = $197cd56b15c33885$var$game.getScore();\n    var stats = $197cd56b15c33885$var$game.getStatus();\n    $197cd56b15c33885$var$messageElements.forEach(function(el) {\n        return el.classList.add(\"hidden\");\n    });\n    if (stats === \"win\") $197cd56b15c33885$var$messageWin.classList.remove(\"hidden\");\n    else if (stats === \"lose\") $197cd56b15c33885$var$messageLose.classList.remove(\"hidden\");\n    else if (stats === \"idle\") {\n        $197cd56b15c33885$var$messageStart.classList.remove(\"hidden\");\n        $197cd56b15c33885$var$buttonStart.textContent = \"Start\";\n        $197cd56b15c33885$var$buttonStart.classList.add(\"start\");\n        $197cd56b15c33885$var$buttonStart.classList.remove(\"restart\");\n    } else if (stats === \"playing\") {\n        $197cd56b15c33885$var$buttonStart.textContent = \"Restart\";\n        $197cd56b15c33885$var$buttonStart.classList.remove(\"start\");\n        $197cd56b15c33885$var$buttonStart.classList.add(\"restart\");\n    }\n}\ndocument.addEventListener(\"keydown\", function(ev) {\n    if ($197cd56b15c33885$var$game.getStatus() !== \"playing\") return;\n    if (ev.key === \"ArrowUp\") $197cd56b15c33885$var$game.moveUp();\n    else if (ev.key === \"ArrowDown\") $197cd56b15c33885$var$game.moveDown();\n    else if (ev.key === \"ArrowRight\") $197cd56b15c33885$var$game.moveRight();\n    else if (ev.key === \"ArrowLeft\") $197cd56b15c33885$var$game.moveLeft();\n    if ($197cd56b15c33885$var$game.isGameOver()) $197cd56b15c33885$var$game.status = \"lose\";\n    $197cd56b15c33885$var$render();\n});\n$197cd56b15c33885$var$buttonStart.addEventListener(\"click\", function() {\n    $197cd56b15c33885$var$game.start();\n    $197cd56b15c33885$var$render();\n    $197cd56b15c33885$var$buttonStart.textContent = \"Restart\";\n    $197cd56b15c33885$var$buttonStart.classList.remove(\"start\");\n    $197cd56b15c33885$var$buttonStart.classList.add(\"restart\");\n});\n\n})();\n//# sourceMappingURL=index.fa30a8f6.js.map\n","'use strict';\n\nimport Game from '../modules/Game.class';\n\nconst game = new Game();\n\nconst fieldElement = document.querySelector('.game-field tbody');\nconst scoreElement = document.querySelector('.game-score');\nconst messageElements = document.querySelectorAll(\n  '.message-container .message',\n);\nconst messageLose = document.querySelector('.message-lose');\nconst messageWin = document.querySelector('.message-win');\nconst messageStart = document.querySelector('.message-start');\nconst buttonStart = document.querySelector('.button.start');\n\nrender();\n\nfunction render() {\n  fieldElement.innerHTML = '';\n\n  const state = game.getState();\n\n  for (let row = 0; row < state.length; row++) {\n    const tr = document.createElement('tr');\n\n    tr.classList.add('field-row');\n\n    for (let col = 0; col < state[row].length; col++) {\n      const value = state[row][col];\n      const cell = document.createElement('td');\n\n      cell.classList.add('field-cell');\n\n      if (value !== 0) {\n        cell.textContent = value;\n        cell.classList.add(`field-cell--${value}`);\n      }\n      tr.appendChild(cell);\n    }\n    fieldElement.appendChild(tr);\n  }\n\n  scoreElement.textContent = game.getScore();\n\n  const stats = game.getStatus();\n\n  messageElements.forEach((el) => el.classList.add('hidden'));\n\n  if (stats === 'win') {\n    messageWin.classList.remove('hidden');\n  } else if (stats === 'lose') {\n    messageLose.classList.remove('hidden');\n  } else if (stats === 'idle') {\n    messageStart.classList.remove('hidden');\n    buttonStart.textContent = 'Start';\n    buttonStart.classList.add('start');\n    buttonStart.classList.remove('restart');\n  } else if (stats === 'playing') {\n    buttonStart.textContent = 'Restart';\n    buttonStart.classList.remove('start');\n    buttonStart.classList.add('restart');\n  }\n}\n\ndocument.addEventListener('keydown', (ev) => {\n  if (game.getStatus() !== 'playing') {\n    return;\n  }\n\n  if (ev.key === 'ArrowUp') {\n    game.moveUp();\n  } else if (ev.key === 'ArrowDown') {\n    game.moveDown();\n  } else if (ev.key === 'ArrowRight') {\n    game.moveRight();\n  } else if (ev.key === 'ArrowLeft') {\n    game.moveLeft();\n  }\n\n  if (game.isGameOver()) {\n    game.status = 'lose';\n  }\n\n  render();\n});\n\nbuttonStart.addEventListener('click', () => {\n  game.start();\n  render();\n  buttonStart.textContent = 'Restart';\n  buttonStart.classList.remove('start');\n  buttonStart.classList.add('restart');\n});\n","'use strict';\nclass Game {\n  constructor(initialState = null) {\n    this.board = initialState || this.createEmptyBoard();\n    this.score = 0;\n    this.status = 'idle';\n  }\n\n  createEmptyBoard() {\n    const board = [];\n\n    for (let i = 0; i < 4; i++) {\n      board.push([0, 0, 0, 0]);\n    }\n\n    return board;\n  }\n\n  moveLeft() {\n    const oldBoard = this.board.map((row) => [...row]);\n    let scoreThisMove = 0;\n\n    for (let i = 0; i < this.board.length; i++) {\n      const row = this.board[i];\n\n      const filtered = row.filter((cell) => cell !== 0);\n\n      const newRow = [];\n      let j = 0;\n\n      while (j < filtered.length) {\n        if (filtered[j] === filtered[j + 1]) {\n          const merged = filtered[j] * 2;\n\n          newRow.push(merged);\n          scoreThisMove += merged;\n          j += 2;\n        } else {\n          newRow.push(filtered[j]);\n          j += 1;\n        }\n      }\n\n      while (newRow.length < 4) {\n        newRow.push(0);\n      }\n\n      this.board[i] = newRow;\n    }\n\n    const boardChanged = this.board.some(\n      (row, i) => row.some((cell, j) => cell !== oldBoard[i][j]),\n      // eslint-disable-next-line\n    );\n\n    if (boardChanged) {\n      this.addRandomTile();\n      this.score += scoreThisMove;\n    }\n\n    if (this.board.some((row) => row.includes(2048))) {\n      this.status = 'win';\n    }\n  }\n  moveRight() {\n    const oldBoard = this.board.map((row) => [...row]);\n    let scoreThisMove = 0;\n\n    for (let i = 0; i < this.board.length; i++) {\n      const row = [...this.board[i]].reverse();\n\n      const filtered = row.filter((cell) => cell !== 0);\n\n      const newRow = [];\n      let j = 0;\n\n      while (j < filtered.length) {\n        if (filtered[j] === filtered[j + 1]) {\n          const merged = filtered[j] * 2;\n\n          newRow.push(merged);\n          scoreThisMove += merged;\n          j += 2;\n        } else {\n          newRow.push(filtered[j]);\n          j += 1;\n        }\n      }\n\n      while (newRow.length < 4) {\n        newRow.push(0);\n      }\n\n      this.board[i] = newRow.reverse();\n    }\n\n    const boardChanged = this.board.some(\n      (row, i) => row.some((cell, j) => cell !== oldBoard[i][j]),\n      // eslint-disable-next-line\n    );\n\n    if (boardChanged) {\n      this.addRandomTile();\n      this.score += scoreThisMove;\n    }\n\n    if (this.board.some((row) => row.includes(2048))) {\n      this.status = 'win';\n    }\n  }\n  moveUp() {\n    const oldBoard = this.board.map((row) => [...row]);\n    let scoreThisMove = 0;\n\n    for (let j = 0; j < 4; j++) {\n      const column = [];\n\n      for (let i = 0; i < 4; i++) {\n        column.push(this.board[i][j]);\n      }\n\n      const filtered = column.filter((cell) => cell !== 0);\n      const newColumn = [];\n      let index = 0;\n\n      while (index < filtered.length) {\n        if (filtered[index] === filtered[index + 1]) {\n          const merged = filtered[index] * 2;\n\n          newColumn.push(merged);\n          scoreThisMove += merged;\n          index += 2;\n        } else {\n          newColumn.push(filtered[index]);\n          index += 1;\n        }\n      }\n\n      while (newColumn.length < 4) {\n        newColumn.push(0);\n      }\n\n      for (let i = 0; i < 4; i++) {\n        this.board[i][j] = newColumn[i];\n      }\n    }\n\n    const boardChanged = this.board.some(\n      (row, i) => row.some((cell, j) => cell !== oldBoard[i][j]),\n      // eslint-disable-next-line\n    );\n\n    if (boardChanged) {\n      this.addRandomTile();\n      this.score += scoreThisMove;\n    }\n\n    if (this.board.some((row) => row.includes(2048))) {\n      this.status = 'win';\n    }\n  }\n  moveDown() {\n    const oldBoard = this.board.map((row) => [...row]);\n    let scoreThisMove = 0;\n\n    for (let j = 0; j < 4; j++) {\n      const column = [];\n\n      for (let i = 0; i < 4; i++) {\n        column.push(this.board[i][j]);\n      }\n\n      const filtered = column.filter((cell) => cell !== 0);\n      const newColumn = [];\n      let index = filtered.length - 1;\n\n      while (index >= 0) {\n        if (filtered[index] === filtered[index - 1]) {\n          const merged = filtered[index] * 2;\n\n          newColumn.unshift(merged);\n          scoreThisMove += merged;\n          index -= 2;\n        } else {\n          newColumn.unshift(filtered[index]);\n          index -= 1;\n        }\n      }\n\n      while (newColumn.length < 4) {\n        newColumn.unshift(0);\n      }\n\n      for (let i = 0; i < 4; i++) {\n        this.board[i][j] = newColumn[i];\n      }\n    }\n\n    const boardChanged = this.board.some(\n      (row, i) => row.some((cell, j) => cell !== oldBoard[i][j]),\n      // eslint-disable-next-line\n    );\n\n    if (boardChanged) {\n      this.addRandomTile();\n      this.score += scoreThisMove;\n    }\n\n    if (this.board.some((row) => row.includes(2048))) {\n      this.status = 'win';\n    }\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getState() {\n    return this.board;\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  start() {\n    this.board = this.createEmptyBoard();\n    this.score = 0;\n    this.status = 'playing';\n    this.addRandomTile();\n    this.addRandomTile();\n  }\n\n  addRandomTile() {\n    const emptyCells = [];\n\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        if (this.board[row][col] === 0) {\n          emptyCells.push({ row, col });\n        }\n      }\n    }\n\n    if (emptyCells.length > 0) {\n      const randomIndex = Math.floor(Math.random() * emptyCells.length);\n      const { row, col } = emptyCells[randomIndex];\n\n      const value = Math.random() < 0.9 ? 2 : 4;\n\n      this.board[row][col] = value;\n    }\n  }\n\n  isGameOver() {\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (this.board[i][j] === 0) {\n          return false;\n        }\n\n        if (j < 3 && this.board[i][j] === this.board[i][j + 1]) {\n          return false;\n        }\n\n        if (i < 3 && this.board[i][j] === this.board[i + 1][j]) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  restart() {\n    this.start();\n  }\n}\n\nmodule.exports = Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { _ as _array_without_holes } from \"./_array_without_holes.js\";\nimport { _ as _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _ as _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n"],"names":["a","$3d28d7f1aac198f5$exports","$c3b10a83b523f372$export$71511d61b312f219","arr","len","length","i","arr2","Array","$227c6742e0ff6f82$export$71511d61b312f219","isArray","iter","Symbol","iterator","from","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","TypeError","$197cd56b15c33885$var$game","protoProps","Game","initialState","arguments","instance","Constructor","board","createEmptyBoard","score","status","key","value","push","_this","oldBoard","map","row","scoreThisMove","_loop","filtered","filter","cell","newRow","j","merged","some","addRandomTile","includes","reverse","column","newColumn","index","i1","unshift","emptyCells","col","randomIndex","Math","floor","random","_emptyCells_randomIndex","row1","col1","start","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","__esModule","default","$197cd56b15c33885$var$fieldElement","document","querySelector","$197cd56b15c33885$var$scoreElement","$197cd56b15c33885$var$messageElements","querySelectorAll","$197cd56b15c33885$var$messageLose","$197cd56b15c33885$var$messageWin","$197cd56b15c33885$var$messageStart","$197cd56b15c33885$var$buttonStart","$197cd56b15c33885$var$render","innerHTML","state","getState","tr","createElement","classList","add","textContent","concat","appendChild","getScore","stats","getStatus","forEach","el","remove","addEventListener","ev","moveUp","moveDown","moveRight","moveLeft","isGameOver"],"version":3,"file":"index.fa30a8f6.js.map"}